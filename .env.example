# .env.example

# ===============================================
# 1. AI API Configuration (필수 설정)
# ===============================================

# Solar LLM 및 임베딩 모델 제공을 위한 API 키 (Upstage)
# SOLAR_API_KEY로 이름 통일 권장
UPSTAGE_API_KEY="your-solar-api-key" 

# LLM_MODEL: solar-pro, solar-1-mini-chat 등
LLM_MODEL=solar-pro
# EMBEDDING_MODEL: solar-embedding-1-large
EMBEDDING_MODEL=solar-embedding-1-large
TEMPERATURE=0.1
MAX_TOKENS=2000

# 예비용 (선택 사항)
# OPENAI_API_KEY="YOUR_OPEN_AI_KEY"
# HF_TOKEN="YOUR_HF_TOKEN"


# ===============================================
# 2. Vector Database Configuration
# ===============================================

# 로컬 임시 파일 저장소 (Docker 컨테이너 내부 경로)
CHROMA_PERSIST_DIRECTORY=./data/chroma_db
CHROMA_COLLECTION_NAME=langchain_docs

# ChromaDB를 독립된 서버로 실행할 경우 (선택 사항)
# 주석을 풀고 사용 시, RAG API는 원격 DB에 연결됨
# CHROMA_HOST=vector_db
CHROMA_PORT=8000


# ===============================================
# 3. Application & Server Settings
# ===============================================

# Application Settings
APP_ENV=development  # development, staging, production
DEBUG=True
LOG_LEVEL=INFO       # INFO, DEBUG, WARNING, ERROR

# API Server Configuration (FastAPI/Uvicorn)
API_HOST=0.0.0.0
API_PORT=8080
WORKERS=4


# ===============================================
# 4. Data Storage Configuration (선택 사항)
# ===============================================

# 메타데이터/히스토리 저장을 위한 관계형 DB (선택 사항)
# 예: MySQL/PostgreSQL
# DATABASE_URL=mysql+pymysql://user:password@localhost:3306/rag_chatbot
# DATABASE_URL=postgresql://user:password@localhost:5432/rag_chatbot


# ===============================================
# 5. Data Crawling Configuration (RAG 데이터 수집)
# ===============================================

CRAWL_BASE_URL=https://python.langchain.com/
CRAWL_DELAY=1           # 요청 사이의 딜레이 (초)
MAX_CRAWL_PAGES=1000    # 최대 크롤링 페이지 수


# ===============================================
# 6. Cache & Monitoring (성능/운영)
# ===============================================

CACHE_ENABLED=True
CACHE_TTL=3600 # 캐시 만료 시간 (초)

ENABLE_METRICS=True
METRICS_PORT=9090 # Prometheus Metrics Port