name: CI / Build, Test, and Push Docker Image

# main 브랜치에 푸시되거나 풀 리퀘스트가 들어올 때 실행
on:
  push:
    branches:
      - main
      - develop # develop 브랜치에도 자동화 적용
  pull_request:
    branches:
      - main

# GitHub Secrets:
# - DOCKER_USERNAME: Docker Hub 사용자 이름
# - DOCKER_PASSWORD: Docker Hub 비밀번호 또는 액세스 토큰
# - UPSTAGE_API_KEY: Solar API Key (테스트/빌드 시 필요)

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    # --- 1. 환경 설정 ---
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' 

    - name: Install dependencies (Testing)
      run: pip install -r requirements.txt
    
    # RAG 체인 테스트를 위해 Upstage API 키를 환경 변수로 설정
    - name: Set Upstage API Key for Test
      run: echo "UPSTAGE_API_KEY=${{ secrets.UPSTAGE_API_KEY }}" >> .env
      env:
        UPSTAGE_API_KEY: ${{ secrets.UPSTAGE_API_KEY }}

    # - name: Run Pytest (단위/통합 테스트)
    #   run: |
    #     # 팀원들이 작성한 테스트 코드가 있다면 여기서 실행합니다.
    #     echo "테스트 스크립트는 팀원 3이 나중에 추가할 예정입니다."
    #     # pytest tests/

    # --- 2. Docker 빌드 및 푸시 ---
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/rag-solar-api:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
