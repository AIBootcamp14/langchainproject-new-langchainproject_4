[
    {
        "title": "LangChain overview",
        "content": "LangChain v1.0 is now available! For a complete list of changes and instructions on how to upgrade your code, see the release notes and migration guide. If you encounter any issues or have feedback, please open an issue so we can improve. To view v0.x documentation, go to the archived content.LangChain is the easiest way to start building agents and applications powered by LLMs. With under 10 lines of code, you can connect to OpenAI, Anthropic, Google, and more. LangChain provides a pre-built agent architecture and model integrations to help you get started quickly and seamlessly incorporate LLMs into your agents and applications.We recommend you use LangChain if you want to quickly build agents and autonomous applications. Use LangGraph, our low-level agent orchestration framework and runtime, when you have more advanced needs that require a combination of deterministic and agentic workflows, heavy customization, and carefully controlled latency.LangChain agents are built on top of LangGraph in order to provide durable execution, streaming, human-in-the-loop, persistence, and more. You do not need to know LangGraph for basic LangChain agent usage.",
        "type": "text"
    },
    {
        "title": "Install",
        "content": "pip install -U langchain",
        "type": "code"
    },
    {
        "title": "Create an agent",
        "content": "# pip install -qU \"langchain[anthropic]\" to call the model\n\nfrom langchain.agents import create_agent\n\ndef get_weather(city: str) -> str:\n    \"\"\"Get weather for a given city.\"\"\"\n    return f\"It's always sunny in {city}!\"\n\nagent = create_agent(\n    model=\"anthropic:claude-sonnet-4-5\",\n    tools=[get_weather],\n    system_prompt=\"You are a helpful assistant\",\n)\n\n# Run the agent\nagent.invoke(\n    {\"messages\": [{\"role\": \"user\", \"content\": \"what is the weather in sf\"}]}\n)",
        "type": "code"
    },
    {
        "title": "Easy to use, highly flexible agent",
        "content": "LangChain’s agent abstraction is designed to be easy to get started with, letting you build a simple agent in under 10 lines of code. But it also provides enough flexibility to allow you to do all the context engineering your heart desires.",
        "type": "text"
    },
    {
        "title": "Standard model interface",
        "content": "Different providers have unique APIs for interacting with models, including the format of responses. LangChain standardizes how you interact with models so that you can seamlessly swap providers and avoid lock-in.",
        "type": "text"
    },
    {
        "title": "Built on top of LangGraph",
        "content": "LangChain’s agents are built on top of LangGraph. This allows us to take advantage of LangGraph’s durable execution, human-in-the-loop support, persistence, and more.",
        "type": "text"
    },
    {
        "title": "Debug with LangSmith",
        "content": "Gain deep visibility into complex agent behavior with visualization tools that trace execution paths, capture state transitions, and provide detailed runtime metrics.",
        "type": "text"
    },
    {
        "title": "What's new in v1",
        "content": "LangChain v1 is a focused, production-ready foundation for building agents. We’ve streamlined the framework around three core improvements:",
        "type": "text"
    },
    {
        "title": "create_agent",
        "content": "The new standard for building agents in LangChain, replacing ",
        "type": "text"
    },
    {
        "title": "Standard content blocks",
        "content": "A new property that provides unified access to modern LLM features across providers.",
        "type": "text"
    },
    {
        "title": "Simplified namespace",
        "content": "The namespace has been streamlined to focus on essential building blocks for agents, with legacy functionality moved to langchain-classic",
        "type": "text"
    }
]